Opal.modules["works/vie"] = function(Opal) {/* Generated by Opal 1.8.2 */
  var $send = Opal.send, $rb_times = Opal.rb_times, $rb_divide = Opal.rb_divide, $truthy = Opal.truthy, self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, button = nil, slider = nil, cursor = nil, label = nil, support = nil, input_element = nil, view_div = nil;

  Opal.add_stubs('new,controller_sender,box,shadow,touch,controller,circle,left,top,text,drag,puts,*,/,data,createElement,[],global,[]=,addEventListener,Native,querySelector,appendChild');
  
  $send(self, 'new', [(new Map([["particle", "controller"]]))], function $$1(msg){
    
    if (msg == null) msg = nil;
    return $$('Atome').$controller_sender(msg);});
  button = self.$box((new Map([["smooth", 6], ["left", 12], ["top", 120], ["color", (new Map([["red", 0.3], ["green", 0.3], ["blue", 0.3]]))]])));
  button.$shadow((new Map([["id", "s1"], ["left", 3], ["top", 3], ["blur", 9], ["invert", true], ["red", 0], ["green", 0], ["blue", 0], ["alpha", 0.7]])));
  $send(button, 'touch', [true], function $$2(){
    return button.$controller("hello")});
  slider = self.$box((new Map([["width", 333], ["height", 25], ["top", 45], ["left", 12], ["smooth", 9], ["color", (new Map([["red", 0.3], ["green", 0.3], ["blue", 0.3]]))]])));
  slider.$shadow((new Map([["id", "s2"], ["left", 3], ["top", 3], ["blur", 9], ["invert", true], ["red", 0], ["green", 0], ["blue", 0], ["alpha", 0.7]])));
  cursor = slider.$circle((new Map([["width", 30], ["height", 30], ["left", 2], ["top", 1], ["color", (new Map([["red", 0.3], ["green", 0.3], ["blue", 0.3]]))]])));
  cursor.$left(0);
  cursor.$top(0);
  cursor.$shadow((new Map([["id", "s4"], ["left", 1], ["top", 1], ["blur", 3], ["option", "natural"], ["red", 0], ["green", 0], ["blue", 0], ["alpha", 0.6]])));
  label = self.$text((new Map([["data", 0], ["top", 69], ["left", 30], ["component", (new Map([["size", 12]]))], ["color", "gray"]])));
  $send(cursor, 'drag', [(new Map([["restrict", (new Map([["max", (new Map([["left", 309], ["top", 0]]))]]))]]))], function $$3(event){var self = $$3.$$s == null ? this : $$3.$$s, value = nil;

    
    if (event == null) event = nil;
    self.$puts(cursor.$left());
    value = $rb_times($rb_divide(cursor.$left(), 309), 100);
    label.$data(value);
    return cursor.$controller((new Map([["action", "setModuleParameterValue"], ["params", (new Map([["moduleId", 6456549897], ["parameterId", 9846546], ["value", value]]))]])));}, {$$s: self});
  support = self.$box((new Map([["top", 250], ["left", 12], ["width", 300], ["height", 40], ["smooth", 9], ["color", (new Map([["red", 0.3], ["green", 0.3], ["blue", 0.3]]))], ["id", "support"]])));
  support.$shadow((new Map([["id", "s3"], ["left", 3], ["top", 3], ["blur", 9], ["invert", true], ["red", 0], ["green", 0], ["blue", 0], ["alpha", 0.7]])));
  input_element = $$('JS').$global()['$[]']("document").$createElement("input");
  input_element['$[]=']("type", "file");
  $send(input_element, 'addEventListener', ["change"], function $$4(native_event){var self = $$4.$$s == null ? this : $$4.$$s, event = nil, file = nil;

    
    if (native_event == null) native_event = nil;
    event = self.$Native(native_event);
    file = event['$[]']("target")['$[]']("files")['$[]'](0);
    if ($truthy(file)) {
      
      self.$puts("file requested: " + (file['$[]']("name")));
      return support.$controller((new Map([["action", "loadProject"], ["params", (new Map([["path", file['$[]']("name")]]))]])));
    } else {
      return nil
    };}, {$$s: self});
  view_div = $$('JS').$global()['$[]']("document").$querySelector("#support");
  return view_div.$appendChild(input_element);
};

Opal.queue(function(Opal) {/* Generated by Opal 1.8.2 */
  var self = Opal.top, nil = Opal.nil;

  Opal.add_stubs('require');
  return self.$require("works/vie")
});
