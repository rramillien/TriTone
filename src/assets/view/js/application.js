Opal.modules["build/medias/rubies/examples/_vie"] = function(Opal) {/* Generated by Opal 1.6.0 */
  var $hash2 = Opal.hash2, $send = Opal.send, $rb_plus = Opal.rb_plus, $rb_times = Opal.rb_times, $rb_divide = Opal.rb_divide, $rb_minus = Opal.rb_minus, $def = Opal.def, self = Opal.top, $nesting = [], $$ = Opal.$r($nesting), nil = Opal.nil, a = nil, hash_test = nil, json_test = nil;

  Opal.add_stubs('new,each,[],+,*,to_i,text,touch,puts,circle,drag,/,-,to_json,parse,get_vie_module');
  
  a = $hash2(["modules", "links"], {"modules": [$hash2(["id", "name", "type_id", "active", "input_slots", "output_slots", "position"], {"id": "90be7add-12fd-476e-a267-c4ea65cd0bad", "name": "Midi in", "type_id": "midi", "active": "true", "input_slots": [$hash2(["id", "name", "unit", "value"], {"id": "948151e4-93c5-428f-a2e9-01f560592a7d", "name": "active", "unit": "", "value": 1})], "output_slots": [$hash2(["id", "name", "unit"], {"id": "394119f0-886e-4fae-8ae7-d3b187266760", "name": "Midi out", "unit": ""})], "position": $hash2(["x", "y", "z"], {"x": 0, "y": 0, "z": 0})}), $hash2(["id", "name", "type_id", "active", "input_slots", "output_slots", "position"], {"id": "82a15e17-c93a-4db1-af8a-d79a32c5b590", "name": "Sin", "type_id": "oscillator", "active": "true", "input_slots": [$hash2(["id", "name", "unit", "value"], {"id": "f8ba775f-7a30-4728-99df-a6b6edf2666e", "name": "active", "unit": "", "value": 1}), $hash2(["id", "name", "unit", "value"], {"id": "002a39c1-e0eb-4ef3-9698-b8bc63faf467", "name": "freq", "unit": "khz", "value": 4.4})], "output_slots": [$hash2(["id", "name", "unit"], {"id": "3d3dd92b-5a61-43bd-b15b-7356224f0fbc", "name": "amplitude", "unit": "db"})], "position": $hash2(["x", "y", "z"], {"x": 1, "y": 0, "z": 0})}), $hash2(["id", "name", "type_id", "active", "input_slots", "output_slots", "position"], {"id": "6f214581-52ba-484a-a896-1e137305bdd5", "name": "mix", "type_id": "mixer", "active": "true", "input_slots": [$hash2(["id", "name", "unit", "value"], {"id": "fbf3a30a-f2a4-49ef-b56c-2830ad5f8917", "name": "active", "unit": "", "value": 1}), $hash2(["id", "name", "unit", "value"], {"id": "d1948f42-4260-4614-a3b8-2070b50c1e73", "name": "input1", "unit": "db", "value": []}), $hash2(["id", "name", "unit", "value"], {"id": "82399578-ec95-48f4-a909-d76e27571048", "name": "input2", "unit": "db", "value": []})], "output_slots": [$hash2(["id", "name", "unit"], {"id": "a1f1cde0-5432-4465-b2a0-d06f759515b0", "name": "mixout", "unit": "db"})], "position": $hash2(["x", "y", "z"], {"x": 2, "y": 0, "z": 0})}), $hash2(["id", "name", "type_id", "active", "input_slots", "output_slots", "position"], {"id": "bf35dea9-f94e-4b73-9cdc-4c57c20ad996", "name": "speak out", "type_id": "output", "active": "true", "input_slots": [$hash2(["id", "name", "unit", "value"], {"id": "fec34afa-a935-4892-949f-bb4ffc312468", "name": "active", "unit": "", "value": 1}), $hash2(["id", "name", "unit"], {"id": "4b0fc5c3-fc04-4122-905d-aeebc4e06099", "name": "input", "unit": "db"})], "output_slots": [], "position": $hash2(["x", "y", "z"], {"x": 3, "y": 0, "z": 0})})], "links": [$hash2(["id", "sourceComponentId", "sourceOutputSlotId", "targetComponentId", "targetInputSlotId", "active"], {"id": "dbde9cd8-462f-4f4a-80c6-cee0b0b9a5eb", "sourceComponentId": "90be7add-12fd-476e-a267-c4ea65cd0bad", "sourceOutputSlotId": "394119f0-886e-4fae-8ae7-d3b187266760", "targetComponentId": "82a15e17-c93a-4db1-af8a-d79a32c5b590", "targetInputSlotId": "002a39c1-e0eb-4ef3-9698-b8bc63faf467", "active": "true"}), $hash2(["id", "sourceComponentId", "sourceOutputSlotId", "targetComponentId", "targetInputSlotId", "active"], {"id": "0bf66202-50fe-4c82-81bd-7c828d1b4edb", "sourceComponentId": "82a15e17-c93a-4db1-af8a-d79a32c5b590", "sourceOutputSlotId": "3d3dd92b-5a61-43bd-b15b-7356224f0fbc", "targetComponentId": "6f214581-52ba-484a-a896-1e137305bdd5", "targetInputSlotId": "d1948f42-4260-4614-a3b8-2070b50c1e73", "active": "true"}), $hash2(["id", "sourceComponentId", "sourceOutputSlotId", "targetComponentId", "targetInputSlotId", "active"], {"id": "929faf01-6320-4273-8557-819f414c9d3a", "sourceComponentId": "6f214581-52ba-484a-a896-1e137305bdd5", "sourceOutputSlotId": "a1f1cde0-5432-4465-b2a0-d06f759515b0", "targetComponentId": "bf35dea9-f94e-4b73-9cdc-4c57c20ad996", "targetInputSlotId": "4b0fc5c3-fc04-4122-905d-aeebc4e06099", "active": "true"})]});
  $$('Atome').$new($hash2(["color"], {"color": $hash2(["renderers", "id", "type", "parents", "children", "left", "top", "red", "green", "blue", "alpha"], {"renderers": ["browser"], "id": "orange_col", "type": "color", "parents": [], "children": [], "left": 33, "top": 66, "red": 0, "green": 0.15, "blue": 0.7, "alpha": 0.6})}));
  
  $def(self, '$get_vie_module', function $$get_vie_module(list) {
    var self = this;

    
    $send(list['$[]']("modules"), 'each', [], function $$1(properties, value){var self = $$1.$$s == null ? this : $$1.$$s, module_id = nil, module_name = nil, module_active = nil, module_position = nil, module_input_slots = nil, module_output_slots = nil, left_pos = nil, top_pos = nil, a = nil, slider = nil;

      
      if (properties == null) properties = nil;
      if (value == null) value = nil;
      module_id = properties['$[]']("id");
      module_name = properties['$[]']("name");
      module_id = properties['$[]']("type_id");
      module_active = properties['$[]']("active");
      module_position = properties['$[]']("position");
      module_input_slots = properties['$[]']("input_slots");
      module_output_slots = properties['$[]']("output_slots");
      left_pos = $rb_plus(120, $rb_times(module_position['$[]']("x").$to_i(), $rb_plus($rb_plus(66, 33), 120)));
      top_pos = $rb_plus(120, $rb_times(module_position['$[]']("y").$to_i(), $rb_plus(66, 33)));
      a = $$('Atome').$new($hash2(["shape"], {"shape": $hash2(["type", "renderers", "id", "parents", "children", "color", "left", "top", "width", "height"], {"type": "shape", "renderers": ["browser"], "id": module_id, "parents": ["view"], "children": [], "color": "orange", "left": left_pos, "top": top_pos, "width": 120, "height": 120})}));
      a.$text($hash2(["data", "visual", "color", "center", "width", "height"], {"data": module_id, "visual": $hash2(["size"], {"size": 12}), "color": "black", "center": "horizontal", "width": 120, "height": 120}));
      $send(a, 'touch', [true], function $$2(){var self = $$2.$$s == null ? this : $$2.$$s;

        return self.$puts(a)}, {$$arity: 0, $$s: self});
      slider = a.$circle($hash2(["width", "height", "top", "left"], {"width": 20, "height": 20, "top": 15, "left": 15}));
      return $send(slider, 'drag', [$hash2(["move", "inertia", "lock", "constraint"], {"move": true, "inertia": true, "lock": "x", "constraint": "parent"})], function $$3(pos){var msg_value = nil;

        
        if (pos == null) pos = nil;
        "module_id : " + (module_id) + ", " + ($rb_divide($rb_minus(pos['$[]']("left"), left_pos), 100));
        msg_value = $rb_divide($rb_minus(pos['$[]']("left"), left_pos), 100);
        
function send_to_controller(module,value){
console.log(module,value)
}
send_to_controller(module_id,msg_value);
;}, 1);}, {$$arity: 2, $$s: self});
    return list['$[]']("links");
  }, 1);
  hash_test = a.$to_json();
  json_test = $$('JSON').$parse(hash_test);
  return self.$get_vie_module(json_test);
};

Opal.queue(function(Opal) {/* Generated by Opal 1.6.0 */
  var self = Opal.top, nil = Opal.nil;

  Opal.add_stubs('require');
  return self.$require("build/medias/rubies/examples/_vie")
});
